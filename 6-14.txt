6-14
Moving Object
MovingObject 클래스 스크립트를 상속함으로 적과 플레이어를 움직이게 함
public abstract class 로 변경
-> 클래스나 클래스 멤버들을 만들 때 기능을 완성하지 않아도 되게 하고, 해당 클래스는 반드시 파생클래스

public float moveTime = 0.1f; // 시간 단위. moveTime동안 오브젝트를 움직이게 함.
public LayerMask blockingLayer; // 이동할 공간이 열려있고, 그 곳으로 이동하려 할 때 충돌이 일어났는 지 체크하는 장소
-> Player, enemy, wall이 blockingLayer로 설정되어 있음

private Rigidbody2D rb2D; // 움직일 유닛의 Rigid Body 2D 컴포넌트의 레퍼런스를 저장함
private boxCollider2D boxCollider; // 
private float inverseMoveTime; // 움직임의 효율적 계산. moveTime의 역수, 비효율적인 나누기연산 대신 곱하기 연산을 사용 가능

protected virtual void Start() // protected virtual함수는 자식클래스(inheriting class)가 덮어써서 재정의(override) 할 수 있다
-> MovingObject 클래스를 상속받아 사용할 것이기 때문에 자식클래스가 Start를 다르게 설정하는 것을 용이하게 한다
boxCollider = GetComponent<BoxCollider2D>();
rb2D = GetComponent<RigidBody2D>();
inverseMoveTime = 1 / moveTime;
protected IEnumerator SmoothMovement (Vector3 end)// 코루틴. 유닛들을 한 공간에서 다른 곳으로 옮기는데 쓴다. 움직일 장소 Vector3 end를 파라미터로 받는다



